c
continue
response.body
response
n
c
continue
Net::HTTP.new(uri.host, uri.port).post(uri.path, data.to_json)
Net::HTTP.new(uri.host, uri.port).post(uri.path, data)
response
n
data
uri
c
continue
Net::HTTP.new(uri.host, uri.port).post(uri.path, data.to_json)
Net::HTTP.new(uri.host, uri.port).post(uri.path, data)
Net::HTTP.new(uri.host, uri.port).post(uri.path)
Net::HTTP.new(uri.host, uri.port).post(uri.path
continue
c
response
n
s
continue
response.execute
response.send
response.body
n
s
n
s
c
babysitter.document_id
q
response.code
n
http_class
uri
c
n
uri
c
Net::HTTP.new(uri.host, uri.port) do |http| puts http end
Net::HTTP.new(uri.host, uri.port)
uri.port
uri.host
c
Net::HTTP.new(uri.host, uri.port).delete("/nyc-open-data/yellow-taxi/_truncate")
uri.path
Net::HTTP.new(uri.path, uri.port).delete("/nyc-open-data/yellow-taxi/_truncate")
Net::HTTP.new("http://localhost:7512").delete("/nyc-open-data/yellow-taxi/_truncate")
uri
response.class
response.methods
response.statut
response.status
response.code
response
http_class.new
http_class
c
n
http_class
uri
response
c
uri
continue
babysitter.base_url
c
continue
options
options[:silent]
continue
babysitter.document_id
c
continue
response.code
reponse.code
continue
response.message
response
continue
response.code
response.statut
response.status
continue
response.message
throw RuntimeError, "to"
response
continue
babysitter.document_id
continue
babysitter.document_id
continue
babysitter.jwt
continue
options
babysitter.username
babysitter.jwt
continue
babysitter.jwt
continue
babysitter.jwt
continue
babysitter.get_jwt
continue
babysitter.get_jwt
continue
babysitter.get_jwt
babysitter
continue
b = Babysitter.new options
continue
get_jwt(options[:host])
continue
options
get_jwt(options[:host])
continue
{toto:42}.dig(:toto)
{toto:42}.dig('toto')
jwt
continue
response.body
response
n
response
continue
URI("http://#{options[:host]}:7512")
URI("http://#{options[:host]}:7512"
Net::HTTP.post_form(URI("http://#{options[:host]}:7512"), username: 'aschen', password: 'aschen')
Net::HTTP.post_form("http://#{options[:host]}:7512", username: 'aschen', password: 'aschen')
response
continue
res = `curl -X POST localhost:7512/_login/local?pretty -H "Content-Type:application/json" --data '{"username": "aschen", "password": "aschen"}'`
